# name: Rust CI

# on:
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Rust
#         uses: rust-lang/setup-rust@v1
#         with:
#           rust-version: stable

#       - name: Cache Cargo registry
#         uses: actions/cache@v3
#         with:
#           path: ~/.cargo/registry
#           key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

#       - name: Cache Cargo build
#         uses: actions/cache@v3
#         with:
#           path: target
#           key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

#       - name: Build debug
#         run: cargo build

#       - name: Run tests
#         run: cargo test -- --nocapture

#       - name: List test output files
#         run: ls -l tests/output || echo "No output dir yet"

name: Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        stability: [prefer-stable]

    name: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
          RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"

      # - name: rust-grcov
      #   # You may pin to the exact commit or the version.
      #   # uses: actions-rs/grcov@bb47b1ed7883a1502fa6875d562727ace2511248
      #   uses: actions-rs/grcov@v0.1

      # - name: Codecov
      #   # You may pin to the exact commit or the version.
      #   # uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
      #   uses: codecov/codecov-action@v4
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
      #   with:
      #     # Repository upload token - get it from codecov.io. Required only for private repositories
      #     # token: # optional
      #     # Specify whether the Codecov output should be verbose
      #     verbose: true
      #     fail_ci_if_error: true
